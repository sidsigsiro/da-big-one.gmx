<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blackpowder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 1
image_speed = 0

// burn out in 20th of a second
alarm[0] = room_speed/40

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Ignite nearby blackpowders
var nearest_powder = instance_nearest(x, y, obj_blackpowder)
show_debug_message(nearest_powder)
if (nearest_powder != noone /*and nearest_powder.curfloor == curfloor*/) {
    if place_meeting(x, y, nearest_powder) {
        with(nearest_powder) {
            instance_change(obj_lit_powder, true)
        }
    }
}

//Ignite nearby grass
for (var i = 0; i &lt; 4; i++) {
    var xx = x + lengthdir_x(spread_range, i * 90);
    var yy = y + lengthdir_y(spread_range, i * 90);
    var nearby_grass = instance_place(xx, yy, obj_grass);
    if (nearby_grass != noone) and nearby_grass.curfloor == curfloor {
        with (nearby_grass) {
            if (lit == false) {
                lit = true;
                alarm[0] = room_speed
            }
        }
    }
}

//Burn self out
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x, y, obj_water) or place_meeting(x, y, obj_evil_water) {
    if !place_meeting(x, y, obj_ice) {
        if !place_meeting(x, y, obj_evil_ice) {
            instance_destroy();
        }
    }
}
if place_meeting(x, y, obj_wind) {
    instance_change(obj_blackpowder, true)
    
}

var ammotar = instance_place(x, y, obj_rifle_ammo_throw) 
    if ammotar {
        with(ammotar) {
            temp = room_speed
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>999999</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
