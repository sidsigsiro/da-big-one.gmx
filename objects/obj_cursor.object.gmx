<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create cursor
depth = -999999
cratehold = false
dashrange = 64
xaxis = 0
yaxis = 0
len = 0
spd = 5
xaxis = gamepad_axis_value(0, gp_axisrh)
yaxis = gamepad_axis_value(0, gp_axisrv)
dir = 0
cam_locked = false
cursor_xprev = 0
cursor_yprev = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get input
scr_get_input();

//check if camera locked
if cam_lock_key {
    if cam_locked = false {
        cam_locked = true
    } else if cam_locked = true {
        cam_locked = false
    }
}

//set cursor lock position
var cursor_x = gamepad_axis_value(0, gp_axisrh), cursor_y = gamepad_axis_value(0, gp_axisrv)

if cam_locked = false {
    cursor_xprev = cursor_x
    cursor_yprev = cursor_y
} else {
    cursor_xprev = cursor_xprev
    cursor_yprev = cursor_yprev
}

//follow mouse
if !gamepad_is_connected(0) {
    x = mouse_x;
    y = mouse_y;
} else if gamepad_is_connected(0) {
    if instance_exists(obj_player) {
        if obj_player.state != scr_scope_state {
            if cam_locked = false {
                x = (obj_player.x) + (cursor_x*100)
                y = (obj_player.y) + (cursor_y*100)
            } else {
                x = (obj_player.x) + (cursor_xprev*100)
                y = (obj_player.y) + (cursor_yprev*100)
            }
        } else if obj_player.state = scr_scope_state {
        
        dir = point_direction(0, 0, xaxis, yaxis);    
    
        if (xaxis == 0 and yaxis == 0) {
        len = 0;
        } else {
        if len &lt; spd {
            len += 0.2
        }
        if len &gt; spd {
            len = spd
        }
        scr_get_face();
    }
}

//Get the hspd and vspd
hspd = lengthdir_x(len, dir);
vspd = lengthdir_y(len, dir);

// Move
x += hspd;
y += vspd;
    
    
    }
}

if mouse_check_button_pressed(mb_right) and place_meeting(x, y, obj_crate) {
    cratehold = true
} 

if mouse_check_button_released(mb_right) {
    cratehold = false
}

if obj_inventory.active = true {
    x = mouse_x;
    y = mouse_y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_get_input();
draw_self();

if scr_item_check(2) {
    if instance_exists(obj_player) {
        if obj_player.moving = false {
            draw_circle(obj_cursor.x, obj_cursor.y, 6, true)
        } else if obj_player.moving = true {
            draw_circle(obj_cursor.x, obj_cursor.y, 20, true)
        }
    }
}

if obj_player.temp = HEAT {
    image_blend = c_red
} else if obj_player.temp = COOL {
    image_blend = c_blue
} else if obj_player.temp = NEUTRAL {
    image_blend = c_green
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
