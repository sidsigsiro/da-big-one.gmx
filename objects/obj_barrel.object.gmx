<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_barrel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///wingus mingus
temp = 0
outofbp = false
phy_fixed_rotation = true
lit = true;
///create box
spd = 0
dir = point_direction (x, y, obj_player.x + 16, obj_player.y + 16)
hspd = lengthdir_x(spd, dir);
vspd = lengthdir_y(spd, dir);
pulled = false
pickup = false
grabbed = false
used = false
state = scr_box_state
curfloor = 1
floorval = 0
image_speed = 0
image_index = 0

dist = 200

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y, obj_noise_large_high)
instance_create(x, y, obj_node_distraction)
instance_create(x, y, obj_explosion)
instance_create(x, y, obj_caunode1)
                if instance_exists(obj_player_ghost) {
                    with(obj_player_ghost) {
                        instance_destroy()
                    }
                }
                instance_create(x, y, obj_player_ghost)
                with(obj_enemy) {
                    if (enstate = scr_enemy_patrol or enstate = scr_enemy_wait) or (enstate = scr_enemy_search_phase2 or enstate = scr_enemy_investigate) {
                        obj_enemy.enstate = scr_enemy_investigate
                        obj_enemy.investar = obj_player_ghost
                        obj_enemy.alarm[10] = room_speed*2
                    }
                }
instance_create(x, y, obj_caunode1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get input
scr_get_input()
///adjust depth
if place_meeting(x, y, obj_floor_2) {
    curfloor = 2
    floorval = (-200)
} else {
    curfloor = 1
    floorval = 0
}

if curfloor = 2 {
    floorval = (-200)
}
if curfloor = 1 {
    floorval = 0
}
depth = -y + floorval

/*
if image_index = 1 {
    if outofbp = false {
        if alarm[1] = -1 {
            alarm[1] = room_speed*5
        }
    }
}
*/

dist_this_frame = point_distance(
    phy_position_xprevious,
    phy_position_yprevious,
    phy_position_x,
    phy_position_y)

if image_index = 1 {  
    dist -= dist_this_frame
    if (dist &gt; 0 and dist_this_frame &gt; 0) {
        instance_create(x, y, obj_blackpowder)
    }
}


if alarm[1] &gt; 0 {
    instance_create(x, y, obj_blackpowder)
}

//Lighting black powder with spark
var touching_spark = place_meeting(x, y, obj_spark);
if image_index = 1 {
    if (touching_spark) &amp;&amp; (lit == false) {
        lit = true;
        alarm[0] = room_speed/20 //Wait one second before spreading and burning out
    }
}

///check state
script_execute(state)

//leak black powder
if place_meeting(x, y, obj_arrow) {
    lit = false // lit = whether the barrel can explode or not. also false = true. welcome to shit coding
    image_index = 1
}

if place_meeting(x, y, obj_explosion) {
    instance_destroy();
}

if collision_circle(x, y, 20, obj_player, true, false) {
    if use_key {
        image_index = 1
        lit = false
    }
}

if temp &gt; 200 {
    alarm[0] = 1
}

if temp &lt; 0 {
    temp = 0
}

if temp &gt; 0 {
    temp -= 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_text(x + 16, y, string(temp));

draw_circle(x, y, 20, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.200000002980232</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>2,8</point>
    <point>26,8</point>
    <point>26,34</point>
    <point>2,34</point>
  </PhysicsShapePoints>
</object>
