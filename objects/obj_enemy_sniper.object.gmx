<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_sniper</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create the path
squad = 1
curgrid = global.grid_floor1
spd = 1
wait = false
sus = 0
sustoken = 1
arrowtimer = 0
dead = false
attacking = false
image_speed = 0
image_index = 0
hp = 2
lookat = direction
noiseheard = noone
enstate = scr_enemy_patrol
curfloor = 1
floorval = 0
path = path_add();
//patrol nodes
totaltar = 0
tar_num = 1

for(var i = 1; i &lt;= 20; i++) {
    tars[i] = noone
}

//alert nodes
cautar = noone
caunexttar = noone
cautar0 = noone
cautar0_default = noone
caunexttar_default = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///time until enemy gets sus'd again
sustoken = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///frozen alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///decrease sus (suspicion)
if sus &gt; 0 {
    sus -= 1
    alarm[5] = room_speed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///charge_arrow
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///change enstate from search phase 2 to patrol
enstate = scr_enemy_patrol
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarm for searching
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarm for wait state/switch from attack to chase
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hit by splash
if place_meeting(x, y, obj_splash) {
    alarm[6] = room_speed*5
    enstate = scr_enemy_frozen
}

//change to search phase 2 if sus is too high
if sus &gt; 100 {
    sus = 100
}

//change to search phase 2 if sus is too high
if sus &gt; 98 {
    if obj_enemy.enstate != scr_enemy_chase {
        if obj_enemy.enstate != scr_enemy_frozen {
        obj_enemy.enstate = scr_enemy_search_phase2
    }
}
if obj_enemy_sniper.enstate != scr_enemy_sniper_chase {
    if obj_enemy_sniper.enstate != scr_enemy_frozen {
        obj_enemy_sniper.enstate = scr_enemy_search_phase2
        }
    }
}
///decrease sus (suspicion)
if sus &gt; 0 {
    if alarm[5] &lt; 1 {
        alarm[5] = room_speed
    }
}

//set numboflines to zero if not chatting
if enstate != scr_enemy_chat {
    numboflines = 0
}

//check for floor
if place_meeting(x, y, obj_floor_2) {
    curfloor = 2
} else if !place_meeting(x, y, obj_floor_2) {
    curfloor = 1
}

///get ded
if hp = 0 {
    dead = true
}
if dead = true {
    enstate = scr_enemy_dead
}

///hit by arrow
if place_meeting(x, y, obj_arrow) {
    hp -= 1
    if enstate = scr_enemy_patrol or scr_enemy_wait {
        instance_create(obj_player.x, obj_player.y, obj_player_ghost)
        enstate = scr_enemy_search_phase1
    }
    with (obj_arrow) {
        instance_destroy();
    }
}

//hit by explosion
if place_meeting(x, y, obj_explosion) {
    hp -= 2
}

///coordinates 
x1 = x + lengthdir_x(170, direction - 45);
y1 = y + lengthdir_y(170, direction - 45);
x2 = x + lengthdir_x(170, direction + 45);
y2 = y + lengthdir_y(170, direction + 45);

//return to patrol
if enstate != scr_enemy_dead {
    if alarm[1] = 0 {
        enstate = scr_enemy_patrol
    }
}

//problem with attacking is here, specifically changing every enemies state to chase.
if enstate != scr_enemy_dead {
    if enstate != scr_enemy_frozen {
        if obj_player.crouch = false   {
            if (curfloor = obj_player.curfloor) or (curfloor = 2 and obj_player.height = 0) {
                if !collision_line(x, y, obj_player.x, obj_player.y, obj_viewblock, false, false) {
                    var inst = obj_player
                    if instance_exists(inst) {
                        if point_in_triangle(inst.x, inst.y, x, y, x1, y1, x2, y2) {
                        obj_enemy_hivemind.alarm[0] = room_speed*2
                        obj_enemy_hivemind.alarm[1] = -1
                        with(obj_enemy) {
                            if dead = false {
                                enstate = scr_enemy_chase
                            }
                        }
                        with(obj_enemy_sniper) {
                            if dead = false {
                                enstate = scr_enemy_sniper_chase
                                }
                            }
                        }
                    }
                }
            }
        }
        if obj_player.crouch = true {
            if !collision_line(x, y, obj_player.x, obj_player.y, obj_viewblock_crouch, false, false) {
                if (curfloor = obj_player.curfloor) or (curfloor = 2 and obj_player.height = 0){
                    if !collision_line(x, y, obj_player.x, obj_player.y, obj_viewblock, false, false) {
                    var inst = instance_nearest(x, y, obj_player);
                    if instance_exists(inst) {
                        if point_in_triangle(inst.x, inst.y, x, y, x1, y1, x2, y2) {
                        obj_enemy_hivemind.alarm[0] = room_speed*2
                        obj_enemy_hivemind.alarm[1] = -1
                            with(obj_enemy) {
                                if dead = false {
                                    enstate = scr_enemy_chase
                                    }
                                }
                            with(obj_enemy_sniper) {
                                if dead = false {
                                    enstate = scr_enemy_sniper_chase
                                    }
                                }  
                            }
                        }
                    }
                }
            }
        }      
        if instance_exists(obj_arrow) {
            if enstate != scr_enemy_chase {  
                if !collision_line(x, y, obj_arrow.x, obj_arrow.y, obj_viewblock, false, false) {
                    if (curfloor = obj_arrow.curfloor) or (height = 32 and obj_arrow.height = 0) {
                        if obj_arrow.crouch = true {
                            if !collision_line(x, y, obj_arrow.x, obj_arrow.y, obj_viewblock_crouch, false, false) {
                                if point_in_triangle(obj_arrow.x, obj_arrow.y, x, y, x1, y1, x2, y2) {
                                    instance_create(obj_player.x, obj_player.y, obj_node_distraction)
                                    investar = obj_node_distraction
                                    if sustoken = 1 {
                                        sustoken = 0
                                        sus += 40
                                        alarm[7] = room_speed/12
                                    }
                                    enstate = scr_enemy_investigate
                                }
                            }
                        }
                        if obj_arrow.crouch = false {
                            if point_in_triangle(obj_arrow.x, obj_arrow.y, x, y, x1, y1, x2, y2) {
                                instance_create(obj_player.x, obj_player.y, obj_node_distraction)
                                investar = obj_node_distraction
                                if sustoken = 1 {
                                    sustoken = 0
                                    sus += 40
                                    alarm[7] = room_speed/12
                                }
                                enstate = scr_enemy_investigate
                            }
                        }
                    }
                }
            }
        }
    }
}

//hit by splash
if place_meeting(x, y, obj_splash) {
    alarm[6] = room_speed*10
    enstate = scr_enemy_frozen
}
 
//stop checking if enemy is dead
script_execute(enstate)

if curfloor = 2 {
    floorval = (-200)
}
if curfloor = 1 {
    floorval = 0
}
depth = -y + floorval
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_self();
   var x1 = x + lengthdir_x(170, direction - 45);
   var y1 = y + lengthdir_y(170, direction - 45);
   var x2 = x + lengthdir_x(170, direction + 45);
   var y2 = y + lengthdir_y(170, direction + 45);
if enstate != scr_enemy_dead {
    draw_triangle_colour(x, y, x1, y1, x2, y2, c_black, c_black, c_black, true)
}

draw_text(x - 16, y, string(sus))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
