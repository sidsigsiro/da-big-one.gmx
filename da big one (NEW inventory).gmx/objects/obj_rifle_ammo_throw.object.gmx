<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_items</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_pickup_any</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create object
event_inherited();
temp = 0
spd = 40
direction = point_direction(phy_position_x, phy_position_y, mouse_x, mouse_y)
dir = direction
physics_apply_impulse(x, y, lengthdir_x(spd, dir), lengthdir_y(spd, dir))
image_speed = 0
image_index = 3
spawn_x = phy_position_x
spawn_y = phy_position_y
stop_x = mouse_x
stop_y = mouse_y
stopped = false
alarm[0] = 2
temp = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///step
if pushed = false {
    decelerate_x = phy_speed_x/(point_distance(phy_position_x, phy_position_y, stop_x, stop_y))
    decelerate_y = phy_speed_y/(point_distance(phy_position_x, phy_position_y, stop_x, stop_y))
    
    if point_distance(spawn_x, spawn_y, phy_position_x, phy_position_y) &gt; 363 {
        phy_speed_x = 0 
        phy_speed_y = 0
    }
    
    if phy_position_x &gt; (stop_x - 5) and phy_position_x &lt; (stop_x + 5) {
        phy_speed_x = 0
    }
    if phy_position_y &gt; (stop_y - 5) and phy_position_y &lt; (stop_y + 5) {
        phy_speed_y = 0
    }
    
    if (phy_speed_x) != 0 {
        phy_speed_x -= (decelerate_x)
    }
    if (phy_speed_y) != 0 {
        phy_speed_y -= (decelerate_y)
    }
    
    rotspd = phy_speed_x + phy_speed_y
    phy_rotation += rotspd
    
    if alarm[0] = -1 {
        if phy_speed_x = 0 and phy_speed_y = 0 {
            if stopped = false {
                phy_fixed_rotation = true;
                phy_active = false
                instance_create(x, y, obj_noise_small)
            }
            stopped = true
        }
    }
} else if pushed = true {
    ///scr_item_push
    if !place_meeting(x, y, obj_ice) {
    len -= 0.05
    } else if place_meeting(x, y, obj_ice) {
    len -= 0.02
    }
    
    if place_meeting(x, y, obj_wall) {
        dir -= 180
    }
    
    hspd = lengthdir_x(len, dir);
    vspd = lengthdir_y(len, dir);
    
    phy_position_x += hspd
    phy_position_y += vspd
    
    if len &lt;= 0 {
        pushed = false
    }
}

//set height
scr_set_floor();

//set_depth
scr_set_depth();

if temp = room_speed {
    instance_create(x, y, obj_caunode1)
    instance_create(x, y, obj_noise_large_high)
    instance_destroy();
}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>8,16</point>
  </PhysicsShapePoints>
</object>
