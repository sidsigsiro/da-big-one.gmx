<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
0 = gold key
1 = silver key
2 = rifle
3 = rifle ammo
4 = empty bottle
5 = black powder bottle
6 = water bottle
7 = flare (smoke bomb)
8 = flare trigger
9 = firebomb
10 = snail
11 = temp
12 = wind
13 = dirt
*/

active = false;
max_items = 9; //total item slots
bp = 0 // black powder
equiped_item = -1

/// Create persistant boxes
for (var i = 0; i &lt; max_items; i++) {
    boxes[i] = instance_create(0, 0, obj_invbutton)
    boxes[i].item = -1
}

mouse_item = -1

// fill with items
scr_item_pickup(4)
scr_item_pickup(8)
scr_item_pickup(11)
scr_item_pickup(12)
scr_item_pickup(13)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///show equipped item
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_tab)) {
    active = !active //toggle active
}

if active = true {
    var boxes_per_row = 5
    var box_width = sprite_get_width(spr_inv_border)
    var box_height = sprite_get_height(spr_inv_border)
    
    // x and y are the upper left corner of the inventory
    x = obj_player.x - (box_width*boxes_per_row)/2
    y = obj_player.y - sprite_get_yoffset(spr_player) - box_height*ceil(max_items/boxes_per_row)
    
    //place boxes in rows
    for (var i = 0; i &lt; max_items; i++) {
        boxes[i].x = x + box_width*(i mod boxes_per_row)
        boxes[i].y = y + box_height*floor(i/boxes_per_row)
    }
    
    // on click, swap box item and mouse item
    if mouse_check_button_pressed(mb_left) {
        var box = instance_position(mouse_x, mouse_y, obj_invbutton)
        
        if box != noone {
            show_debug_message("clicked")
            var swap = mouse_item;
            mouse_item = box.item
            box.item = swap
        }
    }
}

// equip item by num key press
for (var i = 1; i &lt;= 9; i++) {
   if keyboard_check_pressed(ord('0') + i) {
    if equiped_item != boxes[i-1].item {
         equiped_item = boxes[i-1].item
    } else {
        equiped_item = -1
    }
    alarm[0] = room_speed*2
   }
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw mouse item
if active = true and mouse_item != -1 {
    draw_sprite(spr_items, mouse_item, mouse_x, mouse_y)
}

if alarm[0] &gt; 0 {
    draw_sprite(spr_inv_border, 0, obj_player.x + 32, obj_player.y)
    if equiped_item != -1 {
        draw_sprite(spr_items, equiped_item, obj_player.x + 32, obj_player.y)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
