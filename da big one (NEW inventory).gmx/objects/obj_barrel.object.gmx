<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_barrel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///wingus mingus

scr_set_floor();

pushed = false
temp = 0
outofbp = false
lit = true;
///create box
used = false
image_speed = 0
image_index = 0
state = noone
dist = 200
able_to_fall = true
falling = false
grabbed = false

velocity = 0 //falling velocity
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
instance_create(x,y, obj_noise_large)
instance_create(x, y, obj_node_distraction)
instance_create(x, y, obj_explosion)
if instance_exists(obj_player_ghost) {
    with(obj_player_ghost) {
        instance_destroy()
    }
}
instance_create(x, y, obj_player_ghost)
instance_create(x, y, obj_caunode1)
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//alarm for falling
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get input
scr_get_input()

if pushed = true {
    scr_item_push();
}

/*
if image_index = 1 {
    if outofbp = false {
        if alarm[1] = -1 {
            alarm[1] = room_speed*5
        }
    }
}
*/

dist_this_frame = point_distance(
    xprevious,
    yprevious,
    x,
    y)

if image_index = 1 {  
    dist -= dist_this_frame
    if (dist &gt; 0 and dist_this_frame &gt; 0) {
        instance_create(x, y, obj_blackpowder)
    }
}

//get grabed
if obj_player.state = scr_move_state {
    if collision_circle(x, y, 20, obj_player, true, false) {
        if use_key_pressed {
            
        }
    }
}

if alarm[1] &gt; 0 {
    instance_create(x, y, obj_blackpowder)
}

//Lighting black powder with spark
var touching_powder = place_meeting(x, y, obj_lit_powder);
if touching_powder {
    temp = 1
}
///check state
if state != noone {
    script_execute(state)
}

//leak black powder
if place_meeting(x, y, obj_arrow) {
    lit = false // lit = whether the barrel can explode or not. also false = true. welcome to shit coding
    image_index = 1
}

if place_meeting(x, y, obj_explosion) {
    temp = 1
}

if temp = 1 {
    if temp = 1 {
    instance_create(x, y, obj_caunode1)
    instance_create(x, y, obj_noise_large)
    instance_create(x, y, obj_explosion)
    instance_destroy();
    mp_grid_clear_rectangle(global.grid_floor1, x - 14, y - 19, x + 14, y + 19) 
    }
}

if temp &lt; 0 {
    temp = 0
}

scr_item_fall();

//float on water
if place_meeting(x, y, obj_water) {
    len = 0.5
    var watertar = instance_place(x, y, obj_water)
    if watertar {
        dir = watertar.dir
    }
    
    hspd = lengthdir_x(len, dir);
    vspd = lengthdir_y(len, dir);
    
    x += hspd
    y += vspd
    
    if len &lt;= 0 {
        pushed = false
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_text(x + 16, y, string(temp));

draw_circle(x, y, 20, true)

if height &lt; 24 {
    image_blend = c_aqua
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.200000002980232</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
