<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_down</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create player
///NOTE: USE RANDOMIZE(); OTHER WISE ALL RANDOM NUMBERS WILL BE THE SAME EVERYTIME YOU LOAD THE GAME

numb_of_mines = 0
det_timer = 0
barreltar = noone
dblock_charge = 0
temp = NEUTRAL
investar = obj_node_distraction
raised = false
phy_fixed_rotation = true
on_ice = false
sliding = false
coins = 0
stam = 200
arrowtimer = 0
dashtimer = 0
moving = false
onpowder = false
crouch = false
floorval = 0
curfloor = 1
depth = -y
hp = 5;
basespd = 2;
spd = 2;
hspd = 0;
vspd = 0;
xaxis = 0;
yaxis = 0;
xaxisprev = 0;
yaxisprev = 0;
len = 0;
dir = 0;
attacked = false;
image_speed = 1
state = scr_move_state;

ymax = 50

/// Set fixed rotation

face = RIGHT
moving = false
instance_create(x, y, obj_cursor)
jumptarget = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start recharging stamina
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarm for arrow charge time

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///footsteps sounds
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///dash alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NOT SURE WHAT THIS DOES YOU SHOULD FIND OUT SO YOU CAN DELETE IT SO IT STOPS TAKING UP MEMEORY HOPEFULLY YOU DO THAT AND DON'T JUST LEAVE THIS IN AND HAVE IT BE FOUND BY DATA MINERS THAT WOULD BE EMBARRISING BUT AT LEAST YOU FINISHED THE GAME SO YEAH GOOD JOB
///arrow alarm for now


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move the player in the step event
scr_get_input();

//create view if there isn't one
if !instance_exists(obj_view) {
    instance_create(x, y, obj_view)
}

//dash timer
if dashtimer &lt; 0 {
    dashtimer = 0
}

if dashtimer &gt; 0 {
    dashtimer -= 1
}

if !instance_exists(obj_cursor) {
    instance_create(mouse_x, mouse_y, obj_cursor)
}

if hp = 0 {
    room_restart()
}

//check if on ice
if place_meeting(x, y, obj_ice) {
    on_ice = true
} else {
    on_ice = false
}

///slowed down by water
if place_meeting(x, y, obj_water) {
    if !place_meeting(x, y, obj_ice) {
        if crouch = true {
            waterspd = (-0.3)
        } if crouch = false{
            waterspd = (-1)
        }
    } else waterspd = 0
} else waterspd = 0

if place_meeting(x, y, obj_evil_water) {
    if !place_meeting(x, y, obj_ice) {
        room_restart();
    }
}

///hit by arrow
var enemy_arrow = place_meeting(x, y, obj_arrow_enemy)
if enemy_arrow {
    hp -= 1
}

//use perception
if !instance_exists(obj_text) {
    if keyboard_check_pressed(ord('P')) {
        scr_text("The room's air is just as stuffy # as it's colour palette.", 1, obj_view.x, obj_view.y + 8)
    }
} else if instance_exists(obj_text) {
    if keyboard_check_pressed(ord('P')) {
        with (obj_text) {
            instance_destroy()
        }
    }
}
//check if moving
if xaxis = 0 and yaxis = 0 {
    moving = false
} else if (xaxis != 0) or (yaxis != 0) {
    moving = true
}

//make footstep sounds
if crouch = false {
    if moving = true {
        if alarm[2] = -1 {
            alarm[2] = room_speed/6
            if alarm[2] = room_speed/6 {
            instance_create(x, y, obj_noise_foot_step)
            }
        }
    }
}

//restart room
if keyboard_check(ord('T')) {
    room_restart();
}
//check for floor
if place_meeting(x, y, obj_floor_2) {
    curfloor = 2
} else if !place_meeting(x, y, obj_floor_2) {
    curfloor = 1
}
//check if raised
var raisedval
if place_meeting(x, y, obj_floor_dblock) {
    raised = true
    raisedval = -50
}

if !place_meeting(x, y, obj_floor_dblock) {
    raised = false
    raisedval = 0
}
//control depth
if curfloor = 2 {
    floorval = (-200)
}
if curfloor = 1 {
    floorval = 0
}
depth = -y + (floorval + raisedval)

script_execute(state)

//Check for death
if (obj_player_stats.hp &lt;= 0) {
    instance_destroy();
}

//control basespd
if basespd &lt; 0 {
    basespd = 0
}

//crouch speed
if crouch = true {
    crouchspd = (-1)
} else { 
    crouchspd = 0
}

spd = 1.5 + (waterspd) + (crouchspd)

if stam &gt; 200 {
    stam = 200
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block_top">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collide with object
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block_side">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collide with object
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collide with door
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw sprite
draw_self();

if crouch = true {
    image_blend = c_black
} else if crouch = false {
    image_blend = c_white
}

if curfloor = 2 {
    image_blend = c_aqua
} else {
    image_blend = c_white
}

draw_text(x + 32, y + 64, "FPS = " + string(fps_real));

draw_text(x + 32, y - 64, "gun_charge = " + string(arrowtimer));

draw_text(x + 32, y + 32, state)

draw_text(x + 32, y + -32, string(stam))

draw_text(obj_view.x - 200, obj_view.y - 200, string(hp))

draw_text(x - 32, y - 16, string(x))
draw_text(x - 32, y - 25, string(y))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.100000001490116</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>22,31</point>
    <point>42,31</point>
    <point>42,62</point>
    <point>22,62</point>
  </PhysicsShapePoints>
</object>
