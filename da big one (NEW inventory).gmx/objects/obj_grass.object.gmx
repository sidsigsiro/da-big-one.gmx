<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grass</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_viewblock_crouch</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>temp = 0

global.grass_surface = noone;

///wingus mingus
spread_range = 24; //How far around to ignite other blackpowders
lit = false;
image_speed = 0;
image_index = 0;
height = obj_player.height
obj_inventory.bp -= 1

///adjust depth
if height &gt;= 24 {
    floorval = (-200)
} else {
    floorval = 0
}

//set height
scr_set_floor();

//set_depth
depth = 100000
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mp_grid_clear_rectangle(global.grid_floor1, x - 16, y - 48, x + 16, y + 16)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Ignite nearby grass
for (var i = 0; i &lt; 4; i++) {
    var xx = x + lengthdir_x(spread_range, i * 90);
    var yy = y + lengthdir_y(spread_range, i * 90);
    var nearby_grass = instance_place(xx, yy, obj_grass);
    if (nearby_grass != noone) and nearby_grass.height == height {
        with (nearby_grass) {
            if (lit == false) {
                lit = true;
                alarm[0] = room_speed
            }
        }
    }
}

//Burn self out
instance_change(obj_grass_burnt, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_get_input();

if place_meeting(x, y, obj_cursor) {
    if obj_player.stam &gt; 0 {
        if obj_player.temp = HEAT {
                if obj_player.crouch = true {
                    if !collision_line(obj_player.x, obj_player.y, obj_cursor.x, obj_cursor.y, obj_viewblock_crouch, true, true) {
                        if image_index = 0 {
                            obj_player.stam -= 20
                                temp = 1
                        }
                    }
                } else if obj_player.crouch = false {
                obj_player.stam -= 20
                    temp = 1
                }
        }
    }
}

//Lighting black powder with spark
var touching_spark = place_meeting(x, y, obj_spark);
var touching_explosion = place_meeting(x, y, obj_explosion);
if instance_exists(obj_spark) {
    if obj_spark.height == self.height {
        if (touching_spark) &amp;&amp; (lit == false) {
            if image_index = 0 {
                lit = true;
                alarm[0] = room_speed/20 //Wait one second before spreading and burning out
            }
        }
    }
}
if instance_exists(obj_explosion) {
    if (touching_explosion) &amp;&amp; (lit == false) {
        if image_index = 0 {
            lit = true;
            alarm[0] = room_speed/20 //Wait one second before spreading and burning out
        }
    }
}


//Changing subimage while lit
if (lit) &amp;&amp; (image_index == 0) {
    image_index = 1;
    mp_grid_add_rectangle(global.grid_floor1, x - 16, y - 48, x + 16, y + 16)
}

if image_index == 1 {
    var enemytar = instance_place(x, y, obj_enemy)
    if place_meeting(x, y, obj_enemy) {
        with(enemytar) {
            hp -= 2
        }
    }
    ///if place_meeting(x, y, obj_player) (check player step event) {
        //obj_player.hp -= 1
    //}
    var ammotar = instance_place(x, y, obj_rifle_ammo_throw) 
    if ammotar {
        with(ammotar) {
            temp = 1
        }
    }
    if place_meeting(x, y, obj_wind) {
        instance_change(obj_grass_burnt, true)
    } 
}

if temp = 1 {
    lit = true
    alarm[0] = room_speed
    temp = room_speed + 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

var width = surface_get_width(application_surface)
var height = surface_get_height(application_surface)

if !surface_exists(global.grass_surface)
        or surface_get_width(global.grass_surface) != width
        or surface_get_height(global.grass_surface) != height {
    global.grass_surface = surface_create(width, height)
}

//prep 2nd draw pass
surface_set_target(global.grass_surface)
shader_set(shdr_grass)

draw_self()

//clean up draw pass
surface_reset_target()
shader_reset()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
