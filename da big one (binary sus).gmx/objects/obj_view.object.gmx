<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move to player
if (instance_exists(obj_player)) {
    x = obj_player.x;
    y = obj_player.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move 10% towards the player
if obj_player.state != scr_scope_state {
    var xto, yto;
    var rstick_x, lstick_y;
    rstick_x = (obj_player.x + gamepad_axis_value(0, gp_axisrh))*10;
    rstick_y = (obj_player.y + gamepad_axis_value(0, gp_axisrv))*10;
    move_towards_point(obj_cursor.x, obj_cursor.y, 0);
    if obj_inventory.active = true {
        xto = obj_player.x
        yto = obj_player.y
    } else {
        xto = obj_player.x + lengthdir_x(min(192, distance_to_point(obj_cursor.x, obj_cursor.y)), direction)
        yto = obj_player.y + lengthdir_y(min(192, distance_to_point(obj_cursor.x, obj_cursor.y)), direction)
    }
    //how far the camera lags behind (/10 is 10% behind?)
    x += (xto - x)/10;
    y += (yto - y)/10;
        
    //how far the camera lags behind the cursor
    view_xview = -(view_wview/10) + x;
    view_yview = -(view_hview/10) + y;

    view_xview = clamp(view_xview, 0, room_width - view_xview);
    view_yview = clamp(view_yview, 0, room_height - view_yview);
} else {
    x += (obj_cursor.x - x) / 20;
    y += (obj_cursor.y - y) / 20;
}

   if !place_snapped(1, 1)
      {
      move_snap(1, 1);
      }
      
view_wview = 960
view_hview = 540

window_set_size(1920, 1080)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(obj_view.x + 200, obj_view.y + 200, string(view_wport))
draw_text(obj_view.x + 220, obj_view.y + 220, string(view_hport))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
